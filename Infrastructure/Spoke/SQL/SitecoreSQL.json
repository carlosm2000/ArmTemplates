{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "apiVersion": {
      "db": "2014-04-01-preview",
      "privateEndpoint": "2020-04-01"
    },

    "sqlServerNameTidy": "[toLower(trim(parameters('sqlServerName')))]",

    "elasticPoolNameTidy":"[toLower(trim(parameters('elasticPoolName')))]",

    "coreSqlDatabaseNameTidy": "[toLower(trim(parameters('coreSqlDatabaseName')))]",
    "webSqlDatabaseNameTidy": "[toLower(trim(parameters('webSqlDatabaseName')))]",
    "masterSqlDatabaseNameTidy": "[toLower(trim(parameters('masterSqlDatabaseName')))]",
    "poolsSqlDatabaseNameTidy": "[toLower(trim(parameters('poolsSqlDatabaseName')))]",
    "tasksSqlDatabaseNameTidy": "[toLower(trim(parameters('tasksSqlDatabaseName')))]",
    "formsSqlDatabaseNameTidy": "[toLower(trim(parameters('formsSqlDatabaseName')))]",
    "exmMasterSqlDatabaseNameTidy": "[toLower(trim(parameters('exmMasterSqlDatabaseName')))]",

    "shardMapManagerSqlDatabaseNameTidy": "[toLower(trim(parameters('shardMapManagerSqlDatabaseName')))]",
    "shard0SqlDatabaseNameTidy": "[toLower(trim(parameters('shard0SqlDatabaseName')))]",
    "shard1SqlDatabaseNameTidy": "[toLower(trim(parameters('shard1SqlDatabaseName')))]",
    "refDataSqlDatabaseNameTidy": "[toLower(trim(parameters('refDataSqlDatabaseName')))]",
    "refDataSqlDatabaseCollation": "Latin1_General_CS_AS",

    "maSqlDatabaseNameTidy": "[toLower(trim(parameters('maSqlDatabaseName')))]",

    "processingEngineTasksSqlDatabaseNameTidy": "[toLower(trim(parameters('processingEngineTasksSqlDatabaseName')))]",
    "processingEngineStorageSqlDatabaseNameTidy": "[toLower(trim(parameters('processingEngineStorageSqlDatabaseName')))]",
    "reportingSqlDatabaseNameTidy": "[toLower(trim(parameters('reportingSqlDatabaseName')))]",

    "spokeVNetNameTidy": "[toLower(trim(parameters('spokeVNetName')))]",
	  "spokePrivateSubnetNameTidy":  "[toLower(trim(parameters('spokePrivateSubnetName')))]",
    "sqlPrivateEndpointNameTidy":"[toLower(trim(parameters('sqlPrivateEndpointName')))]",

    "elasticPool_id": "[resourceId('Microsoft.Sql/servers/elasticPools', variables('elasticPoolNameTidy'))]",
    "sqlServer_id": "[resourceId('Microsoft.Sql/servers', variables('sqlServerNameTidy'))]",
    "spokeVNet_id": "[resourceId('Microsoft.Network/virtualNetworks',variables('spokeVNetNameTidy'))]",
	  "spokePrivateSubnet_id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('spokeVNetNameTidy'),variables('spokePrivateSubnetNameTidy'))]",

    "sitecoreTags": {
      "provider": "b51535c2-ab3e-4a68-95f8-e2e3c9a19299",
      "core": "core",
      "master": "master",
      "web": "web",
      "pools": "prc-pools",
      "tasks": "prc-tasks",
      "forms": "forms",
      "exmmaster" : "exmmaster",
      "xcRefData": "xc-refdata",
      "xcShard0": "xc-shard-0",
      "xcShard1": "xc-shard-1",
      "xcShardMapManager": "xc-smm",
      "ma": "ma",
      "cortexProcessingEngineTasks": "processingenginetasks",
      "cortexProcessingEngineStorage": "processingenginestorage",
      "reporting": "reporting"
    }
  },
  "parameters": {
    "deploymentId": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]"
    },
    "sitecoreSKU": {
      "type": "string",
      "allowedValues": [ "Extra Small", "Small", "Medium", "Large", "Extra Large", "2x Large", "3x Large" ],
      "defaultValue": "Small",
      "metadata": {
        "description": "Sitecore SKU controls the sizes and service levels of the provisioned resources"
      }
    },
    "spokeVNetName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-Spoke-VNet')]"
    },
    "spokePrivateSubnetName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-Private-Subnet')]"
    },
    "sqlPrivateEndpointName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-sql-private-endpoint')]"
    },

    "sqlServerName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-sql')]"
    },
    "sqlServerLogin": {
      "type": "string",
      "minLength": 1
    },
    "sqlServerPassword": {
      "type": "securestring",
      "minLength": 8
    },
    "sqlServerVersion": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "12.0"
    },
    "sqlDatabaseCollation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },

    "elasticPoolName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-pool-01')]"
    },

    "coreSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-core-db')]"
    },
    "masterSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-master-db')]"
    },
    "webSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-web-db')]"
    },
    "poolsSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-pools-db')]"
    },
    "tasksSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-tasks-db')]"
    },
    "formsSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-forms-db')]"
    },
    "exmMasterSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-exmmaster-db')]"
    },

    "shardMapManagerSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-smm-db')]"
    },
    "shard0SqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-shard0-db')]"
    },
    "shard1SqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-shard1-db')]"
    },
    "refDataSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-refdata-db')]"
    },

    "maSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-ma-db')]"
    },

    "processingEngineTasksSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-processingenginetasks-db')]"
    },
    "processingEngineStorageSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-processingenginestorage-db')]"
    },
    "reportingSqlDatabaseName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentId'), '-reporting-db')]"
    },

    "skuMap": {
      "type": "secureObject",
      "defaultValue": {
        "Extra Small": {
          "elasticPool": {
            "skuName": "StandardPool",
            "skuTier": "Standard",
            "MaxSize": "268435456000",
            "Capacity": 200,
            "MinCapacity": 0,
            "MaxCapacity": 100
          }
        },
        "Small": {
          "elasticPool": {
            "skuName": "StandardPool",
            "skuTier": "Standard",
            "MaxSize": "268435456000",
            "Capacity": 200,
            "MinCapacity": 0,
            "MaxCapacity": 100
          }
        },
        "Medium": {
          "elasticPool": {
            "skuName": "StandardPool",
            "skuTier": "Standard",
            "MaxSize": "268435456000",
            "Capacity": 200,
            "MinCapacity": 0,
            "MaxCapacity": 100
          }
        },
        "Large": {
          "elasticPool": {
            "skuName": "StandardPool",
            "skuTier": "Standard",
            "MaxSize": "268435456000",
            "Capacity": 200,
            "MinCapacity": 0,
            "MaxCapacity": 100
          }
        },
        "Extra Large": {
          "elasticPool": {
            "skuName": "PremiumPool",
            "skuTier": "Premium",
            "MaxSize": "268435456000",
            "Capacity": 300,
            "MinCapacity": 0,
            "MaxCapacity": 150
          }
        },
        "2x Large": {
          "elasticPool": {
            "skuName": "PremiumPool",
            "skuTier": "Premium",
            "MaxSize": "268435456000",
            "Capacity": 300,
            "MinCapacity": 0,
            "MaxCapacity": 150
          }
        },
        "3x Large": {
          "elasticPool": {
            "skuName": "PremiumPool",
            "skuTier": "Premium",
            "MaxSize": "268435456000",
            "Capacity": 400,
            "MinCapacity": 0,
            "MaxCapacity": 200
          }
        }
      }
    },
    "resourceSizes": {
      "type": "object",
      "defaultValue": "[parameters('skuMap')[parameters('sitecoreSKU')]]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[variables('apiVersion').db]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerLogin')]",
        "administratorLoginPassword": "[parameters('sqlServerPassword')]",
        "version": "[parameters('sqlServerVersion')]"
      },
      "name": "[variables('sqlServerNameTidy')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[variables('sitecoreTags').provider]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "[variables('apiVersion').db]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "name": "AllowAllAzureIps",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerNameTidy'))]" ]
        },
        {
          "type": "elasticpools",
          "name": "[variables('elasticPoolNameTidy')]",
          "apiVersion": "[variables('apiVersion').db]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerNameTidy'))]" ],
          "sku": {
              "name": "[parameters('resourceSizes').elasticPool.skuName]",
              "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
              "capacity": "[parameters('resourceSizes').elasticPool.Capacity]"
            },
            "kind": "pool",
            "properties": {
                "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
                "perDatabaseSettings": {
                    "minCapacity": "[parameters('resourceSizes').elasticPool.MinCapacity]",
                    "maxCapacity": "[parameters('resourceSizes').elasticPool.MaxCapacity]"
                },
                "zoneRedundant": false
            }
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('coreSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').core]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('coreSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('masterSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').master]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('masterSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
		    {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('webSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').web]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('webSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('poolsSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').pools]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('poolsSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('tasksSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').tasks]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('tasksSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('formsSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ "[resourceId('Microsoft.Sql/servers', variables('sqlServerNameTidy'))]" ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').forms]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('formsSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('exmMasterSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').exmmaster]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('exmMasterSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('refDataSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').xcRefData]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[variables('refDataSqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('refDataSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('shardMapManagerSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').xcShardMapManager]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('shardMapManagerSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('shard0SqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').xcShard0]"
          },
          "sku": {
                "name": "ElasticPool",
                "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
                "capacity": 0
            },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('shard0SqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('shard1SqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').xcShard1]"
          },
          "sku": {
                "name": "ElasticPool",
                "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
                "capacity": 0
            },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('shard1SqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('maSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').ma]"
          },
          "sku": {
                "name": "ElasticPool",
                "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
                "capacity": 0
            },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('maSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('processingEngineTasksSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').cortexProcessingEngineTasks]"
          },
          "sku": {
                "name": "ElasticPool",
                "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
                "capacity": 0
            },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('processingEngineTasksSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('processingEngineStorageSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').cortexProcessingEngineStorage]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('processingEngineStorageSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "databases",
          "apiVersion": "[variables('apiVersion').db]",
          "name": "[variables('reportingSqlDatabaseNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [ 
            "[variables('sqlServer_id')]",
            "[variables('elasticPool_id')]"
          ],
          "tags": {
            "provider": "[variables('sitecoreTags').provider]",
            "logicalName": "[variables('sitecoreTags').reporting]"
          },
          "sku": {
            "name": "ElasticPool",
            "tier": "[parameters('resourceSizes').elasticPool.skuTier]",
            "capacity": 0
          },
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('resourceSizes').elasticPool.MaxSize]",
            "requestedServiceObjectiveName": "ElasticPool",
            "elasticPoolId": "[variables('elasticPool_id')]"
          },
          "resources": [
            {
              "name": "current",
              "type": "transparentDataEncryption",
              "dependsOn": [
                "[variables('reportingSqlDatabaseNameTidy')]"
              ],
              "apiVersion": "2014-04-01",
              "properties": {
                "status": "Enabled"
              }
            }
          ]
        },
        {
          "type": "Microsoft.Network/privateEndpoints",
          "apiVersion": "[variables('apiVersion').privateEndpoint]",
          "name": "[variables('sqlPrivateEndpointNameTidy')]",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[variables('spokeVNet_id')]",
            "[variables('sqlServer_id')]"
          ],
          "properties": {
            "privateLinkServiceConnections": [
              {
                "name": "[parameters('sqlPrivateEndpointName')]",
                "properties": {
                  "privateLinkServiceId": "[variables('sqlServer_id')]",
                  "groupIds": [
                    "sql-server"
                  ]
                }
              }
            ],
            "subnet": {
              "id": "[variables('spokePrivateSubnet_id')]"
            }
          }
        }
      ]
    }

  ],
  "outputs": {
    "infrastructure": {
      "type": "object",
      "value": {
        "sqlServerFqdn": "[reference(concat('Microsoft.Sql/servers/', variables('sqlServerNameTidy'))).fullyQualifiedDomainName]"
      }
    }
  }
}
